<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Husen&#39;Blog</title>
  
  <subtitle>不忘初心，方得始终</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://blog.husen.xyz/"/>
  <updated>2017-12-24T07:37:29.038Z</updated>
  <id>http://blog.husen.xyz/</id>
  
  <author>
    <name>可爱的小森森^_^</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>Hello World</title>
    <link href="http://blog.husen.xyz/2017/12/24/hello-world/"/>
    <id>http://blog.husen.xyz/2017/12/24/hello-world/</id>
    <published>2017-12-24T07:37:29.040Z</published>
    <updated>2017-12-24T07:37:29.038Z</updated>
    
    <content type="html"><![CDATA[<p>欢迎来到 <a href="https://hexo.io/" target="_blank" rel="noopener">Hexo</a>! 这是你的第一篇文章. 查看 <a href="https://hexo.io/docs/" target="_blank" rel="noopener">documentation</a> 会得到更多的信息. 如果你在使用Hexo的过程中遇到任何的问题, 你可以找到这个内容 <a href="https://hexo.io/docs/troubleshooting.html" target="_blank" rel="noopener">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues" target="_blank" rel="noopener">GitHub</a>.<br><a id="more"></a></p><h2 id="快速开始"><a href="#快速开始" class="headerlink" title="快速开始"></a>快速开始</h2><h3 id="创建一个新的文章"><a href="#创建一个新的文章" class="headerlink" title="创建一个新的文章"></a>创建一个新的文章</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo new <span class="string">"My New Post"</span></span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/writing.html" target="_blank" rel="noopener">Writing</a></p><h3 id="启动hexo"><a href="#启动hexo" class="headerlink" title="启动hexo"></a>启动hexo</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/server.html" target="_blank" rel="noopener">Server</a></p><h3 id="生成静态文件"><a href="#生成静态文件" class="headerlink" title="生成静态文件"></a>生成静态文件</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/generating.html" target="_blank" rel="noopener">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ 发布你的博客</span><br></pre></td></tr></table></figure><p>更多信息: <a href="https://hexo.io/docs/deployment.html" target="_blank" rel="noopener">Deployment</a></p>]]></content>
    
    <summary type="html">
    
      这是建站的时候就有的
    
    </summary>
    
      <category term="你好世界" scheme="http://blog.husen.xyz/categories/%E4%BD%A0%E5%A5%BD%E4%B8%96%E7%95%8C/"/>
    
    
      <category term="HelloWorld" scheme="http://blog.husen.xyz/tags/HelloWorld/"/>
    
  </entry>
  
  <entry>
    <title>Redis keys 命令</title>
    <link href="http://blog.husen.xyz/2017/12/24/Redis-keys-%E5%91%BD%E4%BB%A4/"/>
    <id>http://blog.husen.xyz/2017/12/24/Redis-keys-命令/</id>
    <published>2017-12-24T07:25:43.000Z</published>
    <updated>2017-12-24T07:46:42.244Z</updated>
    
    <content type="html"><![CDATA[<p>Redis 键命令用于管理 redis 的键<br><a id="more"></a><br>假如在Redis中有个键值对：username=admin</p><h4 id="该命令用于在-key-存在时删除-key"><a href="#该命令用于在-key-存在时删除-key" class="headerlink" title="该命令用于在 key 存在时删除 key"></a>该命令用于在 key 存在时删除 key</h4><blockquote><p>del key<br>  例如：del username<br>  当username确实存在并成功删除后返回(integer)1<br>  如果username不存在则返回(integer)0</p><h4 id="序列化给定-key-，并返回被序列化的值"><a href="#序列化给定-key-，并返回被序列化的值" class="headerlink" title="序列化给定 key ，并返回被序列化的值"></a>序列化给定 key ，并返回被序列化的值</h4><p>dump key<br>  例如：dump username</p><h4 id="检查给定-key-是否存在"><a href="#检查给定-key-是否存在" class="headerlink" title="检查给定 key 是否存在"></a>检查给定 key 是否存在</h4><p>exists key<br>  例如：exists username<br>  如果存在返回(integer)1<br>  否则：返回(integer)0</p><h4 id="为给定-key-设置过期时间，以秒来记"><a href="#为给定-key-设置过期时间，以秒来记" class="headerlink" title="为给定 key 设置过期时间，以秒来记"></a>为给定 key 设置过期时间，以秒来记</h4><p>expire key seconds<br>  例如：expire username 60</p><h4 id="expireat-的作用和-expire-类似，都用于为-key-设置过期时间。-不同在于-EXPIREAT-命令接受的时间参数是-UNIX-时间戳-unix-timestamp"><a href="#expireat-的作用和-expire-类似，都用于为-key-设置过期时间。-不同在于-EXPIREAT-命令接受的时间参数是-UNIX-时间戳-unix-timestamp" class="headerlink" title="expireat 的作用和 expire 类似，都用于为 key 设置过期时间。 不同在于 EXPIREAT 命令接受的时间参数是 UNIX 时间戳(unix timestamp)"></a>expireat 的作用和 expire 类似，都用于为 key 设置过期时间。 不同在于 EXPIREAT 命令接受的时间参数是 UNIX 时间戳(unix timestamp)</h4><p>expireat key timestamp</p><h4 id="设置-key-的过期时间以毫秒计"><a href="#设置-key-的过期时间以毫秒计" class="headerlink" title="设置 key 的过期时间以毫秒计"></a>设置 key 的过期时间以毫秒计</h4><p>pexpire key millseconds<br>  例如pexpire username 60000</p><h4 id="设置-key-过期时间的时间戳-unix-timestamp-以毫秒计"><a href="#设置-key-过期时间的时间戳-unix-timestamp-以毫秒计" class="headerlink" title="设置 key 过期时间的时间戳(unix timestamp) 以毫秒计"></a>设置 key 过期时间的时间戳(unix timestamp) 以毫秒计</h4><p>pexpireat key millseconds-timestamp</p><h4 id="查找所有符合给定模式-pattern-的-key"><a href="#查找所有符合给定模式-pattern-的-key" class="headerlink" title="查找所有符合给定模式( pattern)的 key"></a>查找所有符合给定模式( pattern)的 key</h4><p>keys pattern<br>  例如：keys * 查找所有的key</p><h4 id="将当前数据库的-key-移动到给定的数据库-db-当中"><a href="#将当前数据库的-key-移动到给定的数据库-db-当中" class="headerlink" title="将当前数据库的 key 移动到给定的数据库 db 当中"></a>将当前数据库的 key 移动到给定的数据库 db 当中</h4><p>move key db<br>  redis下，数据库是由一个整数索引标识，而不是由一个数据库名称。默认情况下，一个客户端连接到数据库0。假如我们想把username移动到索引为1的数据库，则<br>  move username 1<br>  这个时候再在当前0数据库下exists username 将会返回0<br>  我们可以通过select 1切换到1数据库，再输入exists username 则会返回1</p><h4 id="移除-key-的过期时间，key-将持久保持"><a href="#移除-key-的过期时间，key-将持久保持" class="headerlink" title="移除 key 的过期时间，key 将持久保持"></a>移除 key 的过期时间，key 将持久保持</h4><p>persist key<br>  如果key已经是持久的就会返回(integer)0</p><h4 id="以毫秒为单位返回-key-的剩余的过期时间"><a href="#以毫秒为单位返回-key-的剩余的过期时间" class="headerlink" title="以毫秒为单位返回 key 的剩余的过期时间"></a>以毫秒为单位返回 key 的剩余的过期时间</h4><p>pttl key<br>  如果key是持久的就会返回(integer)-1</p><h4 id="以秒为单位，返回给定-key-的剩余生存时间-TTL-time-to-live"><a href="#以秒为单位，返回给定-key-的剩余生存时间-TTL-time-to-live" class="headerlink" title="以秒为单位，返回给定 key 的剩余生存时间(TTL, time to live)"></a>以秒为单位，返回给定 key 的剩余生存时间(TTL, time to live)</h4><p>ttl key<br>  如果key是持久的就会返回(integer)-1</p><h4 id="从当前数据库中随机返回一个-key"><a href="#从当前数据库中随机返回一个-key" class="headerlink" title="从当前数据库中随机返回一个 key"></a>从当前数据库中随机返回一个 key</h4><p>randomkey</p><h4 id="修改-key-的名称"><a href="#修改-key-的名称" class="headerlink" title="修改 key 的名称"></a>修改 key 的名称</h4><p>rename key newkey<br>  当newkey存在的时候，会将当前key的值覆盖到newkey的值</p><h4 id="仅当-newkey-不存在时，将-key-改名为-newkey"><a href="#仅当-newkey-不存在时，将-key-改名为-newkey" class="headerlink" title="仅当 newkey 不存在时，将 key 改名为 newkey"></a>仅当 newkey 不存在时，将 key 改名为 newkey</h4><p>renamenx key newkey<br>  当newkey存在的时候将会返回0</p><h4 id="返回-key-所储存的值的类型"><a href="#返回-key-所储存的值的类型" class="headerlink" title="返回 key 所储存的值的类型"></a>返回 key 所储存的值的类型</h4><p>type key<br>  例如：type username 返回string类型</p></blockquote>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;Redis 键命令用于管理 redis 的键&lt;br&gt;
    
    </summary>
    
      <category term="Redis" scheme="http://blog.husen.xyz/categories/Redis/"/>
    
    
      <category term="Redis" scheme="http://blog.husen.xyz/tags/Redis/"/>
    
  </entry>
  
  <entry>
    <title>写作</title>
    <link href="http://blog.husen.xyz/2017/12/21/%E5%86%99%E4%BD%9C/"/>
    <id>http://blog.husen.xyz/2017/12/21/写作/</id>
    <published>2017-12-21T01:30:12.000Z</published>
    <updated>2017-12-23T05:37:47.307Z</updated>
    
    <summary type="html">
    
    </summary>
    
      <category term="写文章" scheme="http://blog.husen.xyz/categories/%E5%86%99%E6%96%87%E7%AB%A0/"/>
    
    
      <category term="linux" scheme="http://blog.husen.xyz/tags/linux/"/>
    
      <category term="nginx" scheme="http://blog.husen.xyz/tags/nginx/"/>
    
      <category term="hexo" scheme="http://blog.husen.xyz/tags/hexo/"/>
    
      <category term="next" scheme="http://blog.husen.xyz/tags/next/"/>
    
      <category term="github" scheme="http://blog.husen.xyz/tags/github/"/>
    
  </entry>
  
</feed>
