<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title><![CDATA[Hello World]]></title>
    <url>%2F2017%2F12%2F24%2Fhello-world%2F</url>
    <content type="text"><![CDATA[欢迎来到 Hexo! 这是你的第一篇文章. 查看 documentation 会得到更多的信息. 如果你在使用Hexo的过程中遇到任何的问题, 你可以找到这个内容 troubleshooting or you can ask me on GitHub. 快速开始创建一个新的文章1$ hexo new "My New Post" More info: Writing 启动hexo1$ hexo server More info: Server 生成静态文件1$ hexo generate More info: Generating Deploy to remote sites1$ 发布你的博客 更多信息: Deployment]]></content>
      <categories>
        <category>你好世界</category>
      </categories>
      <tags>
        <tag>HelloWorld</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[Redis keys 命令]]></title>
    <url>%2F2017%2F12%2F24%2FRedis-keys-%E5%91%BD%E4%BB%A4%2F</url>
    <content type="text"><![CDATA[Redis 键命令用于管理 redis 的键假如在Redis中有个键值对：username=admin 该命令用于在 key 存在时删除 key del key 例如：del username 当username确实存在并成功删除后返回(integer)1 如果username不存在则返回(integer)0 序列化给定 key ，并返回被序列化的值dump key 例如：dump username 检查给定 key 是否存在exists key 例如：exists username 如果存在返回(integer)1 否则：返回(integer)0 为给定 key 设置过期时间，以秒来记expire key seconds 例如：expire username 60 expireat 的作用和 expire 类似，都用于为 key 设置过期时间。 不同在于 EXPIREAT 命令接受的时间参数是 UNIX 时间戳(unix timestamp)expireat key timestamp 设置 key 的过期时间以毫秒计pexpire key millseconds 例如pexpire username 60000 设置 key 过期时间的时间戳(unix timestamp) 以毫秒计pexpireat key millseconds-timestamp 查找所有符合给定模式( pattern)的 keykeys pattern 例如：keys * 查找所有的key 将当前数据库的 key 移动到给定的数据库 db 当中move key db redis下，数据库是由一个整数索引标识，而不是由一个数据库名称。默认情况下，一个客户端连接到数据库0。假如我们想把username移动到索引为1的数据库，则 move username 1 这个时候再在当前0数据库下exists username 将会返回0 我们可以通过select 1切换到1数据库，再输入exists username 则会返回1 移除 key 的过期时间，key 将持久保持persist key 如果key已经是持久的就会返回(integer)0 以毫秒为单位返回 key 的剩余的过期时间pttl key 如果key是持久的就会返回(integer)-1 以秒为单位，返回给定 key 的剩余生存时间(TTL, time to live)ttl key 如果key是持久的就会返回(integer)-1 从当前数据库中随机返回一个 keyrandomkey 修改 key 的名称rename key newkey 当newkey存在的时候，会将当前key的值覆盖到newkey的值 仅当 newkey 不存在时，将 key 改名为 newkeyrenamenx key newkey 当newkey存在的时候将会返回0 返回 key 所储存的值的类型type key 例如：type username 返回string类型]]></content>
      <categories>
        <category>Redis</category>
      </categories>
      <tags>
        <tag>Redis</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[写作]]></title>
    <url>%2F2017%2F12%2F21%2F%E5%86%99%E4%BD%9C%2F</url>
    <content type="text"></content>
      <categories>
        <category>写文章</category>
      </categories>
      <tags>
        <tag>linux</tag>
        <tag>nginx</tag>
        <tag>hexo</tag>
        <tag>next</tag>
        <tag>github</tag>
      </tags>
  </entry>
</search>
